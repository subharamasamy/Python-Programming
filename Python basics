Python 3.7.2

Two modes to execute program:
1)interactive mode programming
    #directly executing in terminal and get output in terminal itself
2)Script mode programming
   #create a program in notepad. execute that notepad in terminal to get output alone in terminal
   
 Python is a case sensitive programming language. Thus, Manpower and manpower are two different identifiers in Python.
 
 Class names start with an uppercase letter. All other identifiers start with a lowercase letter.

>>> print ("hello,python")
hello,python


Lines and indentation:

print ("hai")
a=10;
b=20;
if (a>b):
	print ("true")
else:
	print ("false")


Quotation in python:

Python supports single , double and triple quotes.
' '  ,  "  " , """ """   or  '''  '''


single = 'hello';
double = "execute the python program"
triple = """ The way Python scripts are run on Windows versus Unix based operating ... Run a Python script under Windows with the Command Prompt."""

print (single);
print (double);
print (triple);



To get input from user:

print("Enter your name:")
a=input()
print (a);

Variables: 
A variable name must start with a letter or the underscore character
A variable name cannot start with a number
A variable name can only contain alpha-numeric characters and underscores (A-z, 0-9, and _ )
Variable names are case-sensitive (age, Age and AGE are three different variables)

Variable types or data types:

Python variables do not need explicit declaration to reserve memory space. 
The declaration happens automatically when you assign a value to a variable.

Multiple Assignements:
>>> a=b=c=2;
>>> print (a);
2
>>> print (b);
2
>>> print (c);
2
>>>


>>> a,b,c=1,2,3;
>>> print(a,b,c);
1 2 3

To combine both text and a variable, Python uses the + character:
>>> a="hello";
>>> print ("hai"+a);
haihello


Python has five standard data types âˆ’
Numbers
String
List
Tuple
Dictionary


Numbers:
it stores numeric value.
a=10;

Able to delete the variables using del statement:
>>> a=20;
>>> print(a)
20
>>> del a;
>>> print(a)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'a' is not defined

Strings:
Subsets of strings can be taken using the slice operator ([ ] and [:] ) with indexes starting at 0 in the beginning of the string 
The plus (+) sign is the string concatenation operator and the asterisk (*) is the repetition operator.

>>> test="hai world"
>>> print(test)
hai world
>>> print(test[1]) //print 2nd character
a
>>> print(test[0]) //print 1st character
h
>>> print(test[2]) //print 3rd character
i
>>> print(test[3])

>>> print(test[4])
w
>>> print(test[5])
o
>>> print(test[6])
r
>>> print(test[7])
l
>>> print(test[8])
d
>>> print(test[9])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
IndexError: string index out of range
>>>
>>> print(test[1:8])   ////prints from 2nd to 8th character
ai worl
>>> print(test[1:9])
ai world
>>> print(test[2:9])
i world
>>> print(test[0:9])
hai world
>>> print(test[0:8])
hai worl
>>> print(test[0:5])
hai w
>>> print(test[0:6])
hai wo
>>> print(test[0:7])
hai wor


>>> check = "hello";
>>> print (check);
hello
>>> print (check *2);
hellohello
>>> print (check *3);
hellohellohello
>>> print (check *0);

>>> print (check *5);
hellohellohellohellohello

>>> check1 = "hai"
>>> print(check1)
hai

//////incorrect format
>>> print(check1 + hello + python)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'hello' is not defined

/////////correct format
>>> print(check1 + "hello" + "python")
haihellopython
>>> print(check1 + "hello")
haihello


strip() method:
it removes whitespaces from beginning or end of the string.
>>> check="      hey      "
>>> print(check)
      hey
>>> print(check.strip())
hey
>>>


len() method:
it returns the length of a string
>>> length="checking python"
>>> print(len(length))
15


lower() method:
it returns the string in lower case
>>> case="HELLO PYTHON"
>>> print(case.lower())
hello python
>>> case1="HeLLo pYTHoN"
>>> print(case1.lower())
hello python


upper() method:
it returns the string in upper case
>>> case="hello python"
>>> print(case.upper())
HELLO PYTHON
>>> case1="heLLO pYThon"
>>> print(case1.upper())
HELLO PYTHON

Combination of upper and lower case:
>>> case1="heLLO pYThon"
>>> print(case1[6:].upper())
PYTHON
>>> print(case1[6:].upper()+case1[0:5].lower())
PYTHONhello
>>> print(case1[6:].upper()+case1[0:4].lower())
PYTHONhell


replace() method:
Replaces a string with another string
>>> change="hey pythonnn"
>>> print(change.replace('n','t'))
hey pythottt


split() method:
Splits the string into substrings
>>> spl="hai,hello"
>>> print(spl.split(","))
['hai', 'hello']








